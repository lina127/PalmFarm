// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using PlamFarm.Models;

#nullable disable

namespace PlamFarm.Data
{
    public partial class TrackfarmContext : DbContext
    {
        public TrackfarmContext()
        {
        }

        public TrackfarmContext(DbContextOptions<TrackfarmContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Cow> Cow { get; set; }
        public virtual DbSet<Farm> Farm { get; set; }
        public virtual DbSet<Pregnancy> Pregnancy { get; set; }
        public virtual DbSet<Sold> Sold { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Cow>(entity =>
            {
                entity.Property(e => e.CowId).HasColumnName("cowId");

                entity.Property(e => e.BirthDate)
                    .HasColumnType("date")
                    .HasColumnName("birthDate");

                entity.Property(e => e.Comment)
                    .HasMaxLength(500)
                    .HasColumnName("comment");

                entity.Property(e => e.Epd)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("epd")
                    .HasDefaultValueSql("('----')");

                entity.Property(e => e.FarmId).HasColumnName("farmId");

                entity.Property(e => e.Kpn).HasColumnName("kpn");

                entity.Property(e => e.MomUid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("momUId");

                entity.Property(e => e.NickName)
                    .HasMaxLength(50)
                    .HasColumnName("nickName");

                entity.Property(e => e.Sex)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("sex");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("status")
                    .HasDefaultValueSql("(N'breed')");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("type")
                    .HasDefaultValueSql("(N'korean')");

                entity.Property(e => e.UId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("uId");

                entity.HasOne(d => d.Farm)
                    .WithMany(p => p.Cow)
                    .HasForeignKey(d => d.FarmId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Cow_Farm");
            });

            modelBuilder.Entity<Farm>(entity =>
            {
                entity.Property(e => e.FarmId).HasColumnName("farmId");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("name");

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("password");

                entity.Property(e => e.UserName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("userName");
            });

            modelBuilder.Entity<Pregnancy>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BirthDate)
                    .HasColumnType("date")
                    .HasColumnName("birthDate");

                entity.Property(e => e.CowId).HasColumnName("cowId");

                entity.Property(e => e.Kpn).HasColumnName("kpn");

                entity.Property(e => e.PregnancyStatus)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasColumnName("pregnancyStatus")
                    .HasDefaultValueSql("(N'T')");

                entity.Property(e => e.PregnantDate)
                    .HasColumnType("date")
                    .HasColumnName("pregnantDate");

                entity.HasOne(d => d.Cow)
                    .WithMany(p => p.Pregnancy)
                    .HasForeignKey(d => d.CowId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Pregnancy_Cow");
            });

            modelBuilder.Entity<Sold>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Comment)
                    .HasMaxLength(500)
                    .HasColumnName("comment");

                entity.Property(e => e.CowId).HasColumnName("cowId");

                entity.Property(e => e.Grade)
                    .HasMaxLength(50)
                    .HasColumnName("grade");

                entity.Property(e => e.Price).HasColumnName("price");

                entity.HasOne(d => d.Cow)
                    .WithMany(p => p.Sold)
                    .HasForeignKey(d => d.CowId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Sold_Cow");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}